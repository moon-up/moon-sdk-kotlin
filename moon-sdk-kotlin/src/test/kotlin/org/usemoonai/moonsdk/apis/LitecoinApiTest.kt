/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.usemoonai.moonsdk.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.usemoonai.moonsdk.apis.LitecoinApi
import org.usemoonai.moonsdk.models.AccountAPIResponse
import org.usemoonai.moonsdk.models.LitecoinAPIResponse
import org.usemoonai.moonsdk.models.LitecoinInput
import org.usemoonai.moonsdk.models.LitecoinTransactionInput

class LitecoinApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of LitecoinApi
        //val apiInstance = LitecoinApi()

        // to test createLitecoinAccount
        should("test createLitecoinAccount") {
            // uncomment below to test createLitecoinAccount
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val litecoinInput : LitecoinInput =  // LitecoinInput | 
            //val result : AccountAPIResponse = apiInstance.createLitecoinAccount(authorization, litecoinInput)
            //result shouldBe ("TODO")
        }

        // to test getLitecoinAccount
        should("test getLitecoinAccount") {
            // uncomment below to test getLitecoinAccount
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val accountName : kotlin.String = accountName_example // kotlin.String | 
            //val result : AccountAPIResponse = apiInstance.getLitecoinAccount(authorization, accountName)
            //result shouldBe ("TODO")
        }

        // to test listLitecoinAccounts
        should("test listLitecoinAccounts") {
            // uncomment below to test listLitecoinAccounts
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val result : AccountAPIResponse = apiInstance.listLitecoinAccounts(authorization)
            //result shouldBe ("TODO")
        }

        // to test signLitecoinTransaction
        should("test signLitecoinTransaction") {
            // uncomment below to test signLitecoinTransaction
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val accountName : kotlin.String = accountName_example // kotlin.String | 
            //val litecoinTransactionInput : LitecoinTransactionInput =  // LitecoinTransactionInput | 
            //val result : LitecoinAPIResponse = apiInstance.signLitecoinTransaction(authorization, accountName, litecoinTransactionInput)
            //result shouldBe ("TODO")
        }

    }
}
