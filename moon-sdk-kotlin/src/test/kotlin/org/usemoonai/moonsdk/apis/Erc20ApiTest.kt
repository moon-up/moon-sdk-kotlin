/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.usemoonai.moonsdk.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.usemoonai.moonsdk.apis.Erc20Api
import org.usemoonai.moonsdk.models.InputBody
import org.usemoonai.moonsdk.models.TransactionAPIResponse

class Erc20ApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Erc20Api
        //val apiInstance = Erc20Api()

        // to test allowanceErc20
        should("test allowanceErc20") {
            // uncomment below to test allowanceErc20
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val inputBody : InputBody =  // InputBody | 
            //val result : TransactionAPIResponse = apiInstance.allowanceErc20(authorization, name, inputBody)
            //result shouldBe ("TODO")
        }

        // to test approveErc20
        should("test approveErc20") {
            // uncomment below to test approveErc20
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val inputBody : InputBody =  // InputBody | 
            //val result : TransactionAPIResponse = apiInstance.approveErc20(authorization, name, inputBody)
            //result shouldBe ("TODO")
        }

        // to test balanceOfErc20
        should("test balanceOfErc20") {
            // uncomment below to test balanceOfErc20
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val inputBody : InputBody =  // InputBody | 
            //val result : TransactionAPIResponse = apiInstance.balanceOfErc20(authorization, name, inputBody)
            //result shouldBe ("TODO")
        }

        // to test decimalsErc20
        should("test decimalsErc20") {
            // uncomment below to test decimalsErc20
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val inputBody : InputBody =  // InputBody | 
            //val result : TransactionAPIResponse = apiInstance.decimalsErc20(authorization, name, inputBody)
            //result shouldBe ("TODO")
        }

        // to test nameErc20
        should("test nameErc20") {
            // uncomment below to test nameErc20
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val inputBody : InputBody =  // InputBody | 
            //val result : TransactionAPIResponse = apiInstance.nameErc20(authorization, name, inputBody)
            //result shouldBe ("TODO")
        }

        // to test symbolErc20
        should("test symbolErc20") {
            // uncomment below to test symbolErc20
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val inputBody : InputBody =  // InputBody | 
            //val result : TransactionAPIResponse = apiInstance.symbolErc20(authorization, name, inputBody)
            //result shouldBe ("TODO")
        }

        // to test totalSupplyErc20
        should("test totalSupplyErc20") {
            // uncomment below to test totalSupplyErc20
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val inputBody : InputBody =  // InputBody | 
            //val result : TransactionAPIResponse = apiInstance.totalSupplyErc20(authorization, name, inputBody)
            //result shouldBe ("TODO")
        }

        // to test transferErc20
        should("test transferErc20") {
            // uncomment below to test transferErc20
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val inputBody : InputBody =  // InputBody | 
            //val result : TransactionAPIResponse = apiInstance.transferErc20(authorization, name, inputBody)
            //result shouldBe ("TODO")
        }

        // to test transferFromErc20
        should("test transferFromErc20") {
            // uncomment below to test transferFromErc20
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val inputBody : InputBody =  // InputBody | 
            //val result : TransactionAPIResponse = apiInstance.transferFromErc20(authorization, name, inputBody)
            //result shouldBe ("TODO")
        }

    }
}
