/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.usemoonai.moonsdk.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.usemoonai.moonsdk.apis.TronApi
import org.usemoonai.moonsdk.models.AccountAPIResponse
import org.usemoonai.moonsdk.models.TronAPIResponse
import org.usemoonai.moonsdk.models.TronInput
import org.usemoonai.moonsdk.models.TronTransactionInput

class TronApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of TronApi
        //val apiInstance = TronApi()

        // to test createTronAccount
        should("test createTronAccount") {
            // uncomment below to test createTronAccount
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val tronInput : TronInput =  // TronInput | 
            //val result : AccountAPIResponse = apiInstance.createTronAccount(authorization, tronInput)
            //result shouldBe ("TODO")
        }

        // to test getTronAccount
        should("test getTronAccount") {
            // uncomment below to test getTronAccount
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val accountName : kotlin.String = accountName_example // kotlin.String | 
            //val result : AccountAPIResponse = apiInstance.getTronAccount(authorization, accountName)
            //result shouldBe ("TODO")
        }

        // to test listTronAccounts
        should("test listTronAccounts") {
            // uncomment below to test listTronAccounts
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val result : AccountAPIResponse = apiInstance.listTronAccounts(authorization)
            //result shouldBe ("TODO")
        }

        // to test signTronTransaction
        should("test signTronTransaction") {
            // uncomment below to test signTronTransaction
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val accountName : kotlin.String = accountName_example // kotlin.String | 
            //val tronTransactionInput : TronTransactionInput =  // TronTransactionInput | 
            //val result : TronAPIResponse = apiInstance.signTronTransaction(authorization, accountName, tronTransactionInput)
            //result shouldBe ("TODO")
        }

    }
}
