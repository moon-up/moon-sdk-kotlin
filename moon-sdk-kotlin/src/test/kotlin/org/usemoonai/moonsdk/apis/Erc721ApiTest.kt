/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.usemoonai.moonsdk.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.usemoonai.moonsdk.apis.Erc721Api
import org.usemoonai.moonsdk.models.Erc721Request
import org.usemoonai.moonsdk.models.TransactionAPIResponse

class Erc721ApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Erc721Api
        //val apiInstance = Erc721Api()

        // to test approve
        should("test approve") {
            // uncomment below to test approve
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val erc721Request : Erc721Request =  // Erc721Request | 
            //val result : TransactionAPIResponse = apiInstance.approve(authorization, name, erc721Request)
            //result shouldBe ("TODO")
        }

        // to test balanceOf
        should("test balanceOf") {
            // uncomment below to test balanceOf
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val erc721Request : Erc721Request =  // Erc721Request | 
            //val result : TransactionAPIResponse = apiInstance.balanceOf(authorization, name, erc721Request)
            //result shouldBe ("TODO")
        }

        // to test getApproved
        should("test getApproved") {
            // uncomment below to test getApproved
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val erc721Request : Erc721Request =  // Erc721Request | 
            //val result : TransactionAPIResponse = apiInstance.getApproved(authorization, name, erc721Request)
            //result shouldBe ("TODO")
        }

        // to test isApprovedForAll
        should("test isApprovedForAll") {
            // uncomment below to test isApprovedForAll
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val erc721Request : Erc721Request =  // Erc721Request | 
            //val result : TransactionAPIResponse = apiInstance.isApprovedForAll(authorization, name, erc721Request)
            //result shouldBe ("TODO")
        }

        // to test name
        should("test name") {
            // uncomment below to test name
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val erc721Request : Erc721Request =  // Erc721Request | 
            //val result : TransactionAPIResponse = apiInstance.name(authorization, name, erc721Request)
            //result shouldBe ("TODO")
        }

        // to test ownerOf
        should("test ownerOf") {
            // uncomment below to test ownerOf
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val erc721Request : Erc721Request =  // Erc721Request | 
            //val result : TransactionAPIResponse = apiInstance.ownerOf(authorization, name, erc721Request)
            //result shouldBe ("TODO")
        }

        // to test safeTransferFrom
        should("test safeTransferFrom") {
            // uncomment below to test safeTransferFrom
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val erc721Request : Erc721Request =  // Erc721Request | 
            //val result : TransactionAPIResponse = apiInstance.safeTransferFrom(authorization, name, erc721Request)
            //result shouldBe ("TODO")
        }

        // to test setApprovalForAll
        should("test setApprovalForAll") {
            // uncomment below to test setApprovalForAll
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val erc721Request : Erc721Request =  // Erc721Request | 
            //val result : TransactionAPIResponse = apiInstance.setApprovalForAll(authorization, name, erc721Request)
            //result shouldBe ("TODO")
        }

        // to test symbol
        should("test symbol") {
            // uncomment below to test symbol
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val erc721Request : Erc721Request =  // Erc721Request | 
            //val result : TransactionAPIResponse = apiInstance.symbol(authorization, name, erc721Request)
            //result shouldBe ("TODO")
        }

        // to test tokenUri
        should("test tokenUri") {
            // uncomment below to test tokenUri
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val erc721Request : Erc721Request =  // Erc721Request | 
            //val result : TransactionAPIResponse = apiInstance.tokenUri(authorization, name, erc721Request)
            //result shouldBe ("TODO")
        }

        // to test transfer
        should("test transfer") {
            // uncomment below to test transfer
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val erc721Request : Erc721Request =  // Erc721Request | 
            //val result : TransactionAPIResponse = apiInstance.transfer(authorization, name, erc721Request)
            //result shouldBe ("TODO")
        }

        // to test transferFrom
        should("test transferFrom") {
            // uncomment below to test transferFrom
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val erc721Request : Erc721Request =  // Erc721Request | 
            //val result : TransactionAPIResponse = apiInstance.transferFrom(authorization, name, erc721Request)
            //result shouldBe ("TODO")
        }

    }
}
