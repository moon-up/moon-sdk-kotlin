/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.usemoonai.moonsdk.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.usemoonai.moonsdk.apis.OnramperApi
import org.usemoonai.moonsdk.models.GetSupportedOnRampsResponse
import org.usemoonai.moonsdk.models.Quote
import org.usemoonai.moonsdk.models.SellQuote
import org.usemoonai.moonsdk.models.SupportedAssetResponse
import org.usemoonai.moonsdk.models.SupportedCurrenciesResponse
import org.usemoonai.moonsdk.models.SupportedDefaultResponse
import org.usemoonai.moonsdk.models.SupportedPaymentTypesCurrencyResponse
import org.usemoonai.moonsdk.models.TransactionInput

class OnramperApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of OnramperApi
        //val apiInstance = OnramperApi()

        // to test onRamperCheckout
        should("test onRamperCheckout") {
            // uncomment below to test onRamperCheckout
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val accountName : kotlin.String = accountName_example // kotlin.String | 
            //val transactionInput : TransactionInput =  // TransactionInput | 
            //val result : kotlin.Any = apiInstance.onRamperCheckout(authorization, accountName, transactionInput)
            //result shouldBe ("TODO")
        }

        // to test onRamperGetQuotesBuy
        should("test onRamperGetQuotesBuy") {
            // uncomment below to test onRamperGetQuotesBuy
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val fiat : kotlin.String = fiat_example // kotlin.String | 
            //val crypto : kotlin.String = crypto_example // kotlin.String | 
            //val amount : kotlin.Double = 1.2 // kotlin.Double | 
            //val paymentMethod : kotlin.String = paymentMethod_example // kotlin.String | 
            //val uuid : kotlin.String = uuid_example // kotlin.String | 
            //val clientName : kotlin.String = clientName_example // kotlin.String | 
            //val country : kotlin.String = country_example // kotlin.String | 
            //val result : kotlin.collections.List<Quote> = apiInstance.onRamperGetQuotesBuy(authorization, fiat, crypto, amount, paymentMethod, uuid, clientName, country)
            //result shouldBe ("TODO")
        }

        // to test onRamperGetQuotesSell
        should("test onRamperGetQuotesSell") {
            // uncomment below to test onRamperGetQuotesSell
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val fiat : kotlin.String = fiat_example // kotlin.String | 
            //val crypto : kotlin.String = crypto_example // kotlin.String | 
            //val amount : kotlin.Double = 1.2 // kotlin.Double | 
            //val paymentMethod : kotlin.String = paymentMethod_example // kotlin.String | 
            //val uuid : kotlin.String = uuid_example // kotlin.String | 
            //val clientName : kotlin.String = clientName_example // kotlin.String | 
            //val country : kotlin.String = country_example // kotlin.String | 
            //val result : kotlin.collections.List<SellQuote> = apiInstance.onRamperGetQuotesSell(authorization, fiat, crypto, amount, paymentMethod, uuid, clientName, country)
            //result shouldBe ("TODO")
        }

        // to test onRamperGetSupportedAssets
        should("test onRamperGetSupportedAssets") {
            // uncomment below to test onRamperGetSupportedAssets
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val source : kotlin.String = source_example // kotlin.String | 
            //val country : kotlin.String = country_example // kotlin.String | 
            //val result : SupportedAssetResponse = apiInstance.onRamperGetSupportedAssets(authorization, source, country)
            //result shouldBe ("TODO")
        }

        // to test onRamperGetSupportedCurrencies
        should("test onRamperGetSupportedCurrencies") {
            // uncomment below to test onRamperGetSupportedCurrencies
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val type : kotlin.String = type_example // kotlin.String | 
            //val result : SupportedCurrenciesResponse = apiInstance.onRamperGetSupportedCurrencies(authorization, type)
            //result shouldBe ("TODO")
        }

        // to test onRamperGetSupportedDefaultsAll
        should("test onRamperGetSupportedDefaultsAll") {
            // uncomment below to test onRamperGetSupportedDefaultsAll
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val country : kotlin.String = country_example // kotlin.String | 
            //val type : kotlin.String = type_example // kotlin.String | 
            //val result : SupportedDefaultResponse = apiInstance.onRamperGetSupportedDefaultsAll(authorization, country, type)
            //result shouldBe ("TODO")
        }

        // to test onRamperGetSupportedOnRampsAll
        should("test onRamperGetSupportedOnRampsAll") {
            // uncomment below to test onRamperGetSupportedOnRampsAll
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val result : GetSupportedOnRampsResponse = apiInstance.onRamperGetSupportedOnRampsAll(authorization)
            //result shouldBe ("TODO")
        }

        // to test onRamperGetSupportedPaymentTypes
        should("test onRamperGetSupportedPaymentTypes") {
            // uncomment below to test onRamperGetSupportedPaymentTypes
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val fiat : kotlin.String = fiat_example // kotlin.String | 
            //val country : kotlin.String = country_example // kotlin.String | 
            //val type : kotlin.String = type_example // kotlin.String | 
            //val result : SupportedPaymentTypesCurrencyResponse = apiInstance.onRamperGetSupportedPaymentTypes(authorization, fiat, country, type)
            //result shouldBe ("TODO")
        }

        // to test onRamperGetSupportedPaymentTypesFiat
        should("test onRamperGetSupportedPaymentTypesFiat") {
            // uncomment below to test onRamperGetSupportedPaymentTypesFiat
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val fiat : kotlin.String = fiat_example // kotlin.String | 
            //val country : kotlin.String = country_example // kotlin.String | 
            //val result : SupportedPaymentTypesCurrencyResponse = apiInstance.onRamperGetSupportedPaymentTypesFiat(authorization, fiat, country)
            //result shouldBe ("TODO")
        }

    }
}
