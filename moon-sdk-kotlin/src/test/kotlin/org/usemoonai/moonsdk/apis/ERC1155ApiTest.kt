/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.usemoonai.moonsdk.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.usemoonai.moonsdk.apis.ERC1155Api
import org.usemoonai.moonsdk.models.Erc1155Request
import org.usemoonai.moonsdk.models.TransactionAPIResponse

class ERC1155ApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ERC1155Api
        //val apiInstance = ERC1155Api()

        // to test balanceOf
        should("test balanceOf") {
            // uncomment below to test balanceOf
            //val name : kotlin.String = name_example // kotlin.String | 
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val erc1155Request : Erc1155Request =  // Erc1155Request | 
            //val result : TransactionAPIResponse = apiInstance.balanceOf(name, authorization, erc1155Request)
            //result shouldBe ("TODO")
        }

        // to test balanceOfBatch
        should("test balanceOfBatch") {
            // uncomment below to test balanceOfBatch
            //val name : kotlin.String = name_example // kotlin.String | 
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val erc1155Request : Erc1155Request =  // Erc1155Request | 
            //val result : TransactionAPIResponse = apiInstance.balanceOfBatch(name, authorization, erc1155Request)
            //result shouldBe ("TODO")
        }

        // to test isApprovedForAll
        should("test isApprovedForAll") {
            // uncomment below to test isApprovedForAll
            //val name : kotlin.String = name_example // kotlin.String | 
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val erc1155Request : Erc1155Request =  // Erc1155Request | 
            //val result : TransactionAPIResponse = apiInstance.isApprovedForAll(name, authorization, erc1155Request)
            //result shouldBe ("TODO")
        }

        // to test safeBatchTransferFrom
        should("test safeBatchTransferFrom") {
            // uncomment below to test safeBatchTransferFrom
            //val name : kotlin.String = name_example // kotlin.String | 
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val erc1155Request : Erc1155Request =  // Erc1155Request | 
            //val result : TransactionAPIResponse = apiInstance.safeBatchTransferFrom(name, authorization, erc1155Request)
            //result shouldBe ("TODO")
        }

        // to test safeTransferFrom
        should("test safeTransferFrom") {
            // uncomment below to test safeTransferFrom
            //val name : kotlin.String = name_example // kotlin.String | 
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val erc1155Request : Erc1155Request =  // Erc1155Request | 
            //val result : TransactionAPIResponse = apiInstance.safeTransferFrom(name, authorization, erc1155Request)
            //result shouldBe ("TODO")
        }

        // to test setApprovalForAll
        should("test setApprovalForAll") {
            // uncomment below to test setApprovalForAll
            //val name : kotlin.String = name_example // kotlin.String | 
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val erc1155Request : Erc1155Request =  // Erc1155Request | 
            //val result : TransactionAPIResponse = apiInstance.setApprovalForAll(name, authorization, erc1155Request)
            //result shouldBe ("TODO")
        }

    }
}
